openapi: 3.0.0
info:
  title: "Password Manager API"
  description: "API for managing user accounts and passwords."
  version: "1.0.0"

paths:
  /register:
    post:
      summary: "Register a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "User registered successfully"
          content:
            application/json:
              example:
                status: "success"
                message: "User registered successfully"
                user:
                  id: 1
                  name: "John Doe"
                  email: "john@example.com"

  /login:
    post:
      summary: "Authenticate user and get access token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              example:
                status: "success"
                user:
                  id: 1
                  name: "John Doe"
                  email: "john@example.com"
                authorization:
                  token: "your_access_token"
                  type: "bearer"

  /users/{user}/accounts:
    post:
      summary: "Create a new account"
      security:
        - BearerAuth: []
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: integer
          description: "User ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                website_url:
                  type: string
                username:
                  type: string
                password:
                  type: string
                note:
                  type: string
      responses:
        '200':
          description: "Account created successfully"
          content:
            application/json:
              example:
                status: "success"
                message: "Account created successfully"
                account:
                  id: 2
                  account_name: "new_account"
                  website_url: "http://newexample.com"
                  username: "newuser"
                  password: "$2y$10$hash..."
                  note: "New account note"
                  user_id: 1
                  created_at: "2024-02-10T12:30:00Z"
                  updated_at: "2024-02-10T12:30:00Z"

  /profile:
    get:
      summary: "Get user profile"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "User profile"
          content:
            application/json:
              example:
                status: "success"
                user:
                  id: 1
                  name: "John Doe"
                  email: "john@example.com"
                  created_at: "2024-02-10T12:00:00Z"
                  updated_at: "2024-02-10T12:00:00Z"

  /refresh:
    get:
      summary: "Refresh access token"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Access token refreshed successfully"
          content:
            application/json:
              example:
                status: "success"
                authorization:
                  token: "new_access_token"
                  type: "bearer"

  /logout:
    get:
      summary: "Logout user"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "User logged out successfully"
          content:
            application/json:
              example:
                status: "success"
                message: "User logged out successfully"

  /accounts:
    get:
      summary: "Get user's accounts"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "List of user's accounts"
          content:
            application/json:
              example:
                status: "success"
                accounts:
                  - id: 1
                    account_name: "example_account"
                    website_url: "http://example.com"
                    username: "user123"
                    password: "$2y$10$hash..."
                    note: "Example note"
                    user_id: 1
                    created_at: "2024-02-10T12:00:00Z"
                    updated_at: "2024-02-10T12:00:00Z"

    post:
      summary: "Create a new account"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                website_url:
                  type: string
                username:
                  type: string
                password:
                  type: string
                note:
                  type: string
      responses:
        '200':
          description: "Account created successfully"
          content:
            application/json:
              example:
                status: "success"
                message: "Account created successfully"
                account:
                  id: 2
                  account_name: "new_account"
                  website_url: "http://newexample.com"
                  username: "newuser"
                  password: "$2y$10$hash..."
                  note: "New account note"
                  user_id: 1
                  created_at: "2024-02-10T12:30:00Z"
                  updated_at: "2024-02-10T12:30:00Z"

  /accounts/{account}:
    get:
      summary: "Get account details"
      security:
        - BearerAuth: []
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: integer
          description: "Account ID"
      responses:
        '200':
          description: "Account details"
          content:
            application/json:
              example:
                status: "success"
                account:
                  id: 1
                  account_name: "example_account"
                  website_url: "http://example.com"
                  username: "user123"
                  password: "$2y$10$hash..."
                  note: "Example note"
                  user_id: 1
                  created_at: "2024-02-10T12:00:00Z"
                  updated_at: "2024-02-10T12:00:00Z"

    put:
      summary: "Update account details"
      security:
        - BearerAuth: []
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: integer
          description: "Account ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                website_url
